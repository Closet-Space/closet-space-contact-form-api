AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  RecipientEmail:
    Type: String
    Description: where to send emails from the contact form
    MinLength: '0'
    Default: "ClosetSpaceLLC@gmail.com"
  ApiPathContact:
    Type: String
    Default: contact
  StageName:
    Type: String
    Default: live

Globals:
  Api:
    EndpointConfiguration: EDGE
    Cors: "'*'"

Resources:
  ContactFormAPI:
    Type: AWS::Serverless::Api
    Description: API for sending contact emails
    Properties:
      BinaryMediaTypes: 
        - "application/json"
      Cors:
        AllowMethods: "'POST'"
        AllowHeaders: "'X-Forwarded-For'"
        AllowOrigin: "'*'" 
        MaxAge: "'600'"
        AllowCredentials: False
      EndpointConfiguration: 
        Type: EDGE
      Models:
        ContactFormInformation:
          type: object
          required:
            - email_address
            - subject
            - body
          properties:
            email_address:
              type: string
            subject:
              type: string
            integer:
              type: string
      Name: ClosetSpaceContactFormAPI
      OpenApiVersion: "3.0.1"
      StageName: !Ref StageName
      Tags: 
        ApplicationName: Closet Space 
      TracingEnabled: False

  ApiResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ContactFormAPI
      ParentId: !GetAtt 
        - ContactFormAPI
        - RootResourceId
      PathPart: api

  V1Resource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ContactFormAPI
      ParentId: !Ref ApiResource
      PathPart: v1
  
  ContactRootContactResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref ContactFormAPI
      ParentId: !Ref V1Resource
      PathPart: !Ref ApiPathContact
  
  LambdaPOSTPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      FunctionName: !GetAtt ContactFormLambda.Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        !Join ["", [
          "arn:aws:execute-api:", 
          !Ref "AWS::Region", 
          ":", 
          !Ref "AWS::AccountId",
          ":",
          !Ref ContactFormAPI,
          "/*/POST/api/v1/",
          !Ref ApiPathContact
          ]
        ]
  
  ApiDeployment202103212020:
    DependsOn: ContactPOSTMethod
    Type: AWS::ApiGateway::Deployment
    Properties: 
      Description: deployment of courses endpoints
      RestApiId: !Ref ContactFormAPI
      StageName: !Ref StageName

  # ApiKey:
  #   Type: 'AWS::ApiGateway::ApiKey'
  #   DependsOn:
  #     - ApiDeployment202103212021
  #   Properties:
  #     Name: TestApiKey
  #     Description: CloudFormation API Key V1
  #     Enabled: true
  #     StageKeys:
  #       - RestApiId: !Ref ContactFormAPI
  #         StageName: !Ref StageName
  #     Value: !Ref APIKeyValue

  ContactPOSTMethod:
    DependsOn: LambdaPOSTPermission
    Type: AWS::ApiGateway::Method
    Properties:
      ResourceId: !Ref ContactRootContactResource
      RestApiId: !Ref ContactFormAPI
      AuthorizationType: NONE
      HttpMethod: POST
      ApiKeyRequired: false
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Join ["", [
          "arn:aws:apigateway:",
          !Ref "AWS::Region",
          ":lambda:path/2015-03-31/functions/",
          !GetAtt ContactFormLambda.Arn,
          "/invocations"
        ]]

  ContactFormLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ClosetSpaceContactFormLambdaRole
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "lambda.amazonaws.com"
                - "apigateway.amazonaws.com"
                - "ses.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: closet_space_ses_send_email
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ses:SendEmail"
                  - "ses:SendRawEmail"
                Resource: "arn:aws:ses:us-east-1:375251325318:identity/ClosetSpaceLLC@gmail.com"

  ContactFormLambda:
    Type: AWS::Serverless::Function
    Description: description
    Properties:
      Handler: main.lambda_handler
      Runtime: python3.8
      CodeUri: .
      Timeout: 30
      FunctionName: ClosetSpaceContactFormFunction
      MemorySize: 128
      Role: !GetAtt ContactFormLambdaRole.Arn
      Environment:
        Variables:
          RECIPIENT_EMAIL: !Ref RecipientEmail
      Events:
        ContactEvent:
          Type: Api
          Properties:
            Method: POST
            Path: "/contact"
            # RequestModel: RequestModel
            # RequestParameters: String | RequestParameter
            RestApiId: !Ref ContactFormAPI
      Tags:
        ApplicationName: Closet Space

  # Authorizer:
  #   Type: 'AWS::ApiGateway::Authorizer'
  #   Properties:
  #     AuthorizerCredentials: !GetAtt 
  #       - ContactFormLambdaRole
  #       - Arn
  #     AuthorizerResultTtlInSeconds: 300
  #     AuthorizerUri: !Join 
  #       - ''
  #       - - 'arn:aws:apigateway:'
  #         - !Ref 'AWS::Region'
  #         - ':lambda:path/2015-03-31/functions/'
  #         - !GetAtt 
  #           - ContactFormLambda
  #           - Arn
  #         - /invocations
  #     Type: JWT
  #     IdentitySource: method.request.header.Auth
  #     Name: DefaultAuthorizer
  #     RestApiId: !Ref ContactFormAPI
